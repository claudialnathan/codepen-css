:root {
  color-scheme: light dark;

  --lime: #d0fc95;
  --lazuli: #0037ff;
  --teal: D0FBC6;
  --dark: #202020;

  --background: light-dark(#faf9fb, #111111);
  --surface: light-dark(white, #1a1a1c);
  --text: light-dark(#202020, white);
  --text-subtle: light-dark(#71717b, #ababab);
  --border-color: light-dark(#d9d9d9, #2b2b2d);
  --links: light-dark(#0037ff, #aa99ff);

  --btn-main: light-dark(#d0fc95, #d0fc95);
  --btn-main-text: light-dark(#202020, #202020);
  --btn-dark: light-dark(#202020, #2b2c3b);
  --btn-dark-text: light-dark(#ffffff, #ffffff);
  --card-main-bg: light-dark(#faf9fb, #212127);

  --s2: 2px;
  --s4: 4px;
  --s6: 6px;
  --s10: 10px;
  --s12: 12px;
  --s14: 0.875rem;
  --s16: 1rem;
  --s18: 1.125rem;
  --s20: 1.25rem;
  --s24: clamp(1.34rem, 1.294rem + 0.23vw, 1.5rem);
  --s26: clamp(1.375rem, 1.303rem + 0.36vw, 1.625rem);
  --s28: clamp(1.475rem, 1.397rem + 0.39vw, 1.75rem);
  --s32: clamp(1.7rem, 1.614rem + 0.43vw, 2rem);
  --s34: clamp(1.81rem, 1.72rem + 0.45vw, 2.125rem);
  --s36: clamp(1.91rem, 1.812rem + 0.49vw, 2.25rem);
  --s40: clamp(2.125rem, 2.017rem + 0.54vw, 2.5rem);
  --s44: clamp(2.34rem, 2.222rem + 0.59vw, 2.75rem);
  --s48: clamp(2.55rem, 2.422rem + 0.64vw, 3rem);
  --s56: clamp(2.975rem, 2.825rem + 0.75vw, 3.5rem);
  --s64: clamp(3.4rem, 3.228rem + 0.86vw, 4rem);
  --s72: clamp(3.825rem, 3.633rem + 0.96vw, 4.5rem);
  --s80: clamp(4.25rem, 4.036rem + 1.07vw, 5rem);
  --s96: clamp(5.1rem, 4.842rem + 1.29vw, 6rem);
  --s192: clamp(10.2rem, 9.686rem + 2.57vw, 12rem);
  --s256: clamp(13.6rem, 12.914rem + 3.43vw, 16rem);

  --grid--1: repeat(1, minmax(0, 1fr));
  --grid--2: repeat(2, minmax(0, 1fr));
  --grid--3: repeat(3, minmax(0, 1fr));
  --grid--4: repeat(4, minmax(0, 1fr));
  --grid--5: repeat(5, minmax(0, 1fr));
  --grid--6: repeat(6, minmax(0, 1fr));
  --grid--7: repeat(7, minmax(0, 1fr));
  --grid--8: repeat(8, minmax(0, 1fr));
  --grid--9: repeat(9, minmax(0, 1fr));
  --grid--10: repeat(10, minmax(0, 1fr));
  --grid--11: repeat(11, minmax(0, 1fr));
  --grid--12: repeat(12, minmax(0, 1fr));
  --grid-gap: clamp(1rem, calc(2cqi + 0.5rem), 1.125rem);

  --txt-size-d1: clamp(5.5rem, 4.5rem + 5vw, 9rem);
  --txt-size-d3: clamp(3.625rem, 2.875rem + 3.75vw, 6.25rem);
  --txt-size-h1: clamp(2.8rem, 2.274rem + 2.63vw, 4.64rem);
  --txt-size-h2: clamp(2.33rem, 1.976rem + 1.77vw, 3.57rem);
  --txt-size-h3: clamp(1.94rem, 1.708rem + 1.16vw, 2.75rem);
  --txt-size-h4: clamp(1.62rem, 1.48rem + 0.7vw, 2.11rem);
  --txt-size-h5: clamp(1.35rem, 1.27rem + 0.4vw, 1.63rem);
  --txt-size-h6: clamp(1.125rem, 1.089rem + 0.18vw, 1.25rem);
  --txt-size-md: clamp(1.07rem, 1.052rem + 0.09vw, 1.13rem);
  --txt-size-body: 1rem;
  --txt-size-sm: 0.875rem;
  --txt-size-xs: 0.75rem;

  --border-width: 1px;
  --border-style: solid;
  --radius-3: 3px;
  --radius-5: 5px;
  --radius-16: 16px;
  --radius-24: 24px;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  accent-color: var(--links);
  caret-color: var(--links);
}

::selection {
  background: var(--_color---ui--select);
  color: var(--_color---ui--select-text);
}

html {
  scroll-behavior: smooth;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeSpeed;
  touch-action: manipulation;
  width: 100%;
  min-height: 100vh;
  overflow-x: hidden;
}

/* creates new stacking context on the main content wrapper */
.page_main {
  isolation: isolate;
}

a {
  color: inherit;
  text-decoration: inherit;
  font-size: inherit;
}

a:not([class]) {
  color: var(--links);
}

:where(input, textarea, select, label) {
  font: inherit;
  color: inherit;
  background: transparent;
  border-radius: 0.5rem;
  margin: 0;
}

button:not(:disabled) {
  cursor: pointer;
}

/* unset list defaults where class applied */

ul:where([class]),
ol:where([class]) {
  list-style: "";
  padding-left: 0;
}

/* ------- media defaults ------- */

img::selection {
  background: transparent;
}

:where(img, video, svg, picture) {
  display: block;
  max-inline-size: 100%;
  block-size: auto;
}

/* ------- misc ------- */

[hidden] + * {
  margin-top: 0 !important;
}

/* remove margins from first and last divs */

* > :first-child {
  margin-top: 0 !important;
  margin-left: 0 !important;
}
* > :last-child {
  margin-bottom: 0 !important;
  margin-right: 0 !important;
}

:where([class*="l-flex-"], [class*="l-cluster"]) {
  gap: var(--s24, 1.5rem);
}

/*------ 
flex
first letter:justify, second: align
justify: t (top/start), c (center), b (bottom/end...also between, it's confusing I know it WORKS FOR ME IM SORRY IM LAZY)
align: s (start), c (center), e (end)
------*/

.l-flex-ts {
  display: flex;
  justify-content: flex-start;
  align-content: flex-start;
}

.l-flex-tc {
  display: flex;
  justify-content: center;
  align-content: flex-start;
}

.l-flex-te {
  display: flex;
  justify-content: flex-end;
  align-content: flex-start;
}

.l-flex-tb {
  display: flex;
  justify-content: space-between;
  align-content: center;
}

.l-flex-cs {
  display: flex;
  justify-content: flex-start;
  align-content: center;
}

.l-flex-center {
  display: flex;
  justify-content: center;
  align-content: center;
}

.l-flex-ce {
  display: flex;
  justify-content: flex-end;
  align-content: center;
}

.l-flex-cb {
  display: flex;
  justify-content: space-between;
  align-content: center;
}

.l-flex-be {
  display: flex;
  justify-content: flex-end;
  align-content: flex-end;
}

.l-flex-bc {
  display: flex;
  justify-content: center;
  align-content: flex-end;
}

.l-flex-be {
  display: flex;
  justify-content: flex-end;
  align-content: flex-end;
}

.l-flex-bb {
  display: flex;
  justify-content: space-between;
  align-content: flex-end;
}

/*------ 
cluster
wrap down only bc it's all I ever need it for
------*/

/*----------- flow ------------*/
:where([class*="l-stack-"]) {
  gap: var(--layout--gap, 1.5rem);
  height: 100%;
}

.l-stack > * + * {
  margin-block-start: var(--layout--gap);
}

.l-stack-sm > * + * {
  margin-block-start: var(--layout--gap-sm);
}

.l-stack-md > * + * {
  margin-block-start: var(--layout--gap-md);
}

.l-stack-lg > * + * {
  margin-block-start: var(--layout--gap-lg);
}

:where([class*="l-row"]) {
  gap: var(--layout--gap, 1.5rem);
}

/* grid orphans centered */
[class*="l-grid-"] > :last-child:has(~ :nth-last-child(2)) {
  grid-column: 1 / -1;
  justify-self: center;
  align-self: center;
}

/* grid container queries */
@container (max-width: 50rem) {
  .l-grid-4 {
    grid-template-columns: var(--grid-2);
  }
  .l-grid-5 {
    grid-template-columns: var(--grid-3);
  }
  .l-grid-6 {
    grid-template-columns: var(--grid-3);
  }
}

@container (max-width: 40rem) {
  .l-grid-3,
  .l-grid-4,
  .l-grid-5,
  .l-grid-6 {
    grid-template-columns: var(--grid-2);
  }
}

@container (max-width: 30rem) {
  [class*="l-grid-"] {
    grid-template-columns: 1fr;
  }
}

/* BENTO */

.l-bento {
  &:has(> :last-child:nth-child(3)) > :first-child {
    grid-column: span 2;
  }

  &:has(> :last-child:nth-child(4)) {
    grid-template-columns: repeat(2, 1fr);
  }

  &:has(> :last-child:nth-child(5)) > :first-child {
    grid-column: span 2;
  }

  &:has(> :last-child:nth-child(6)) {
    grid-template-columns: repeat(2, 1fr);
  }

  &:has(> :last-child:nth-child(7)) > :first-child {
    grid-column: span 2;
    grid-row: span 2;
  }

  &:has(> :last-child:nth-child(8)) {
    grid-template-columns: repeat(2, 1fr);
  }

  &:has(> :last-child:nth-child(9)) {
    grid-template-columns: repeat(3, 1fr);
  }

  &:has(> :last-child:nth-child(10)) {
    grid-template-columns: repeat(2, 1fr);
  }

  &:has(> :last-child:nth-child(11)) > :first-child {
    grid-column: span 2;
    grid-row: span 2;
  }

  &:has(> :last-child:nth-child(12)) {
    grid-template-columns: repeat(4, 1fr);
  }

  /* landscape bento */
  @container bento (orientation: landscape) {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;

    &:has(> :last-child:nth-child(3)) {
      grid-template-columns: repeat(4, 1fr);
    }

    &:has(> :last-child:nth-child(5)) > :first-child {
      grid-column: initial;
      grid-row: span 2;
    }

    &:has(> :last-child:nth-child(6)),
    &:has(> :last-child:nth-child(8)),
    &:has(> :last-child:nth-child(10)),
    &:has(> :last-child:nth-child(12)) {
      grid-template-rows: repeat(2, 1fr);
    }

    &:has(> :last-child:nth-child(9)) > :first-child {
      grid-column: span 2;
      grid-row: span 2;
    }
  }
}

body {
  font-family: "Inter", sans-serif;
  font-size: var(--txt-size--body);
  font-weight: 400;
  line-height: 1.4;
  letter-spacing: -0.01em;
  margin-top: 0;
  margin-bottom: 0;
}

p {
  text-wrap: pretty;
  hyphens: auto;
  max-inline-size: 90ch;
}

:is(h1, h2, h3, h4, h5, h6) {
  text-wrap: balance;
}

[class*="u-txt-"] > :where(h1, h2, h3, h4, h5, h6, p, blockquote) {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  text-transform: inherit;
  text-wrap: inherit;
  margin-top: inherit;
  margin-bottom: inherit;
}

.u-txt-d1 {
  font-size: var(--txt-size-d1);
}

.u-txt-d2 {
  font-size: var(--txt-size-d2);
}

h1,
.u-txt-h1 {
  font-size: var(--txt-size-h1);
}

.u-txt-h2 {
  font-size: var(--txt-size-h2);
}

.u-txt-h3 {
  font-size: var(--txt-size-h3);
}

.u-txt-h4 {
  font-size: var(--txt-size-h4);
}

.u-txt-h5 {
  font-size: var(--txt-size-h5);
}

.u-txt-h6 {
  font-size: var(--txt-size-h6);
}

.u-txt-body {
  font-size: var(--txt-size-body);
}

.u-txt-sm {
  font-size: var(--txt-size-sm);
}

.u-txt-xs {
  font-size: var(--txt-size-xs);
}

/* ------- line clamp ------- */
[class*="u-txt-lines-"] {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.u-txt-lines-1 {
  -webkit-line-clamp: 1;
}
.u-txt-lines-2 {
  -webkit-line-clamp: 2;
}
.u-txt-lines-3 {
  -webkit-line-clamp: 3;
}
.u-txt-lines-4 {
  -webkit-line-clamp: 4;
}
.u-txt-lines-5 {
  -webkit-line-clamp: 5;
}
.u-txt-lines-6 {
  -webkit-line-clamp: 6;
}

.u-border-default {
  border-width: var(--border-width);
  border-style: var(--border-style);
  border-color: var(--border-color);
}

.u-border-rd-3 {
  border-radius: var(--radius-3);
}

.u-border-rd-5 {
  border-radius: var(--radius-5);
}

.u-border-rd-16 {
  border-radius: var(--radius-16);
}

.u-border-rd-24 {
  border-radius: var(--radius-24);
}

/* ------- hide ------- */
.u_hide-if-empty:empty,
.u_hide-if-empty:not(:has(> :not(.w-condition-invisible))),
.u_hide-if-empty-cms:not(:has(.w-dyn-item)),
.w-richtext[class*="u_text-style-"]
  > :not(h1, h2, h3, h4, h5, h6, p, blockquote, ul, ol, span),
.u_embed-js,
.u_embed-css {
  display: none !important;
}

body {
  background-color: var(--background);
  color: var(--text);
}